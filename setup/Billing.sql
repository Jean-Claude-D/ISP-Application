CREATE OR REPLACE PROCEDURE DATE_MODIFICATION (INVOICE_ID IN NUMBER, REP_ID IN VARCHAR2)
AS
    PREV_DATE DATE;
BEGIN

    SELECT CREATED_DATE INTO PREV_DATE FROM INVOICE
    WHERE ID = INVOICE_ID;
    
    INSERT INTO INVOICE_MODIFICATION VALUES (INVOICE_ID, REP_ID, CURRENT_DATE, PREV_DATE);
    
    UPDATE INVOICE SET DUE_DATE  = (CURRENT_DATE + 21), CREATED_DATE = CURRENT_DATE
    WHERE ID = INVOICE_ID;
    
END;

/*****************************************************************************************/

CREATE OR REPLACE PROCEDURE REFUNDING (INVOICE_NUM IN NUMBER, 
                                        REP_ID IN VARCHAR2,
                                        REFUNDING_REASON IN VARCHAR2,
                                        REFUNDING_AMOUNT IN NUMBER)
AS
    PREV_DATE DATE;
BEGIN
    
    SELECT CREATED_DATE INTO PREV_DATE FROM INVOICE
    WHERE ID = INVOICE_NUM;
    
    INSERT INTO INVOICE_MODIFICATION VALUES (INVOICE_NUM, REP_ID, CURRENT_DATE, PREV_DATE);
    
    INSERT INTO REFUND VALUES (REP_ID, INVOICE_NUM, REFUNDING_AMOUNT, REFUNDING_REASON);
    
    UPDATE BALANCE SET TOTAL = TOTAL - REFUNDING_AMOUNT
    WHERE ID = INVOICE_NUM;
END;

EXECUTE REFUNDING(2003, 'JOE', 'EXTRA CHARGE FOR MODEM', 5);

/************************************************************************************************/


/**************************************************************************************************/
CREATE OR REPLACE PROCEDURE PACKAGE_COST_PROFIT (PACK IN VARCHAR2, PACK_REVENUE OUT NUMBER , PACK_COST OUT NUMBER)
AS

BEGIN
    SELECT P.RUNNING_COST * COUNT(I.INTERNET_PACKAGE)INTO PACK_COST FROM INTERNET_PACKAGE P
    JOIN INVOICE I ON I.INTERNET_PACKAGE = P. NAME
    WHERE P.NAME = PACK
    GROUP BY I.INTERNET_PACKAGE, P.RUNNING_COST;
    
    SELECT P.MONTHLY_PRICE * COUNT(I.INTERNET_PACKAGE)INTO PACK_REVENUE FROM INTERNET_PACKAGE P
    JOIN INVOICE I ON I.INTERNET_PACKAGE = P. NAME
    WHERE P.NAME = PACK
    GROUP BY I.INTERNET_PACKAGE, P.MONTHLY_PRICE;
    
END;

SELECT P.MONTHLY_PRICE * COUNT(I.INTERNET_PACKAGE) AS PACK_CUST  FROM INTERNET_PACKAGE P
    JOIN INVOICE I ON I.INTERNET_PACKAGE = P. NAME
    WHERE P.NAME = 'HYBRID GIGA'
    GROUP BY I.INTERNET_PACKAGE, P.MONTHLY_PRICE;

 PACKAGE_COST_PROFIT('HYBRID GIGA');
 DECLARE
a VARCHAR2(20) :=  'HYBRID GIGA';
B NUMBER(7,2);
C NUMBER(7,2);
BEGIN
		PACKAGE_COST_PROFIT(a,b,C);
		dbms_output.put_line(B);
        dbms_output.put_line(C);
END;

/*********************************************************************************************************************************/
CREATE TRIGGER BALANCE_TRIGGER
AFTER INSERT OR UPDATE
ON PAYMENT
FOR EACH ROW
BEGIN
    UPDATE BALANCE SET TOTAL = TOTAL - :NEW.AMOUNT_PAID , SUBTOTAL = SUBTOTAL - :NEW.AMOUNT_PAID
    WHERE ID = :NEW.INVOICE;
END;

/********************************************************************************************************************************/
CREATE TRIGGER BALANCE_REFUND_TRIGGER
AFTER INSERT 
ON REFUND
FOR EACH ROW
BEGIN
    UPDATE BALANCE SET TOTAL = TOTAL - :NEW.AMOUNT , SUBTOTAL = SUBTOTAL - :NEW.AMOUNT
    WHERE ID = :NEW.INVOICE;
END;

/*******************************************************************************************************************************/















